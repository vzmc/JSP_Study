/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-01-23 07:29:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.games;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.Game;
import java.util.List;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/games/../layouts/header.jsp", Long.valueOf(1516692591121L));
    _jspx_dependants.put("/games/../layouts/footer.jsp", Long.valueOf(1516690273597L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("bean.Game");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/Task/assets/stylesheets/bootstrap.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/Task/assets/stylesheets/bootstrap.min.css\">\r\n");
      out.write("\r\n");
      out.write("    <script src=\"/Task/assets/javascripts/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("    <script src=\"/Task/assets/javascripts/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <title>Games</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-default\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("      <div class=\"navbar-header\">\r\n");
      out.write("        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n");
      out.write("          <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("          <span class=\"icon-bar\"></span>\r\n");
      out.write("          <span class=\"icon-bar\"></span>\r\n");
      out.write("          <span class=\"icon-bar\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"/Task/games/index\">Library</a>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("      <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("        <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("            <li><a href=\"/Task/games/sign_up.jsp\">Sign Up</a></li>\r\n");
      out.write("            <li><a href=\"SignOut.action\">Sign Out</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div><!-- /.navbar-collapse -->\r\n");
      out.write("    </div><!-- /.container-fluid -->\r\n");
      out.write("  </nav>\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("      ");
 if(session.getAttribute("user") != null){ 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 List<Game> games = (List<Game>)request.getAttribute("games"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"panel panel-default\">\r\n");
      out.write("    <div class=\"panel-heading\">\r\n");
      out.write("        <h2>ゲーム商品一覧</h2>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"panel-body\">\r\n");
      out.write("        <table class=\"table table-striped\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>ID</th>\r\n");
      out.write("                    <th>タイトル</th>\r\n");
      out.write("                    <th>価格(円)</th>\r\n");
      out.write("                    <th>会社名</th>\r\n");
      out.write("                    <th>編集</th>\r\n");
      out.write("                    <th>削除</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                ");
 for(Game g : games){ 
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th>");
      out.print( g.getId() );
      out.write("    </th>\r\n");
      out.write("                        <td>");
      out.print( g.getTitle() );
      out.write(" </td>\r\n");
      out.write("                        <td>");
      out.print( g.getPrice() );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( g.getCompany() );
      out.write("  </td>\r\n");
      out.write("                        <td><a href=edit?id=");
      out.print(g.getId());
      out.write(" class=\"btn btn-primary\">編集</a></td>\r\n");
      out.write("                        <td><a href=Delete.action?id=");
      out.print(g.getId());
      out.write(" class=\"btn btn-danger\">削除</a></td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<a href=\"new.jsp\" class=\"btn btn-success\">新規追加</a>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

    }
    else
    {

      out.write("\r\n");
      out.write("    <h3>Loginしてください</h3>\r\n");
      out.write("    <p><a href=\"/Task/games/sign_in.jsp\" class=\"btn btn-primary\">Login</a></p>\r\n");

    }
 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
